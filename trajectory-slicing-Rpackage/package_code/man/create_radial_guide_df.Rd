% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_create_radial_guide_df.R
\name{create_radial_guide_df}
\alias{create_radial_guide_df}
\title{create_radial_guide_df}
\usage{
create_radial_guide_df(slice_radius, lat_center, lon_center, stepwidth = 0.5)
}
\arguments{
\item{slice_radius}{<numeric vector> radii (in geographical degrees) for the slices}

\item{lat_center}{<numeric> center latitude of the circles}

\item{lon_center}{<numeric> center longitude of the circles}

\item{stepwidth}{<numeric> angle (in degrees) between steps.}
}
\value{
<data.frame> Contains several columns, among them the radius and angle of the polar coordinate system and the corresponding lat-lon coordinates (if you want to plot this on a lat-lon grid, fore example over a map).
The "angle" column is contained in two formats: "angle" is given in "0 to 360 degree" format (with N = 0, E=90, S=180 and W=270),
"angle2" is given in "-180 to 180 degree format (with N = 0, E=90, S = 180/-180, W = -90).
}
\description{
creates a df containing necessary information to plot a "radial reference system" on a map. This is, concentric cycles centered on the
centerpoint of the polar reference system.
}
\examples{
#create a radial slice dataframe centered on 16.35S, 68.13W (check google maps ;))
radial_slice_df = create_radial_guide_df(slice_radius=c(5,10,15),lat_center = -16.35, lon_center = -68.13)

library(ggplot2)

#plot all the circles
ggplot(radial_slice_df, aes(x=lon, y = lat, group= slice_position))+
  geom_path()+
  coord_fixed(xlim = quantile(radial_slice_df$lon, c(0,1)), ylim = quantile(radial_slice_df$lat, c(0,1)))

#plot for all circles only the first quadrant
ggplot(subset(radial_slice_df, angle <=90), aes(x=lon, y = lat, group= slice_position))+
  geom_path()+
  coord_fixed(xlim = quantile(radial_slice_df$lon, c(0,1)), ylim = quantile(radial_slice_df$lat, c(0,1)))

#plot for all circles only the arc between 150 degrees and -150 degrees (in the -180 to 180 degree definition, North = 0)
ggplot(subset(radial_slice_df, angle_180 >= 150 | angle_180 <=-150), aes(x=lon, y = lat, group= slice_position))+
  geom_path()+
  coord_fixed(xlim = quantile(radial_slice_df$lon, c(0,1)), ylim = quantile(radial_slice_df$lat, c(0,1)))

}
