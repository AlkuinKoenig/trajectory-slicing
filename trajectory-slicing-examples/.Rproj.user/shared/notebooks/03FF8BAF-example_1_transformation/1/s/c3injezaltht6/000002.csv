"0","tic()"
"0","test_df_lat= data.table::rbindlist(lapply(c(45,50,55,60), "
"0","                                          function(x){get_slice_crossing_df(traj_df=myHYS, slice_position = x, slice_type=""latitudinal"", "
"0","                                                                            ID_columns = c(""ID_time"",""ID_location""),"
"0","                                                                            extra_vars = c(""height"",""mixdepth""), "
"0","                                                                            delta_filter = delta_filter_estimate$lat_delta[1])}))"
"0","toc()"
"1","0.33 sec elapsed
"
"0","tic()"
"0","test_df_lon= data.table::rbindlist(lapply(c(-30,-20,0,10), "
"0","                                          function(x){get_slice_crossing_df(traj_df=myHYS, slice_position = x, slice_type=""longitudinal"","
"0","                                                                            ID_columns = c(""ID_time"",""ID_location""), "
"0","                                                                            extra_vars = c(""height"",""mixdepth""), "
"0","                                                                            delta_filter = delta_filter_estimate$lon_delta[1])}))"
"0","toc()"
"1","0.23 sec elapsed
"
"0","tic()"
"0","test_df_rad= data.table::rbindlist(lapply(c(5,10,15,20), "
"0","                                          function(x){get_slice_crossing_df(traj_df=myHYS, slice_position = x, slice_type=""radial"", "
"0","                                                                            ID_columns = c(""ID_time"",""ID_location""),"
"0","                                                                            extra_vars = c(""lat"",""lon"",""height"",""mixdepth""), "
"0","                                                                            delta_filter = delta_filter_estimate$radius_delta[1])}))%>%"
"0","  #the following column allows us to plot the angle with 0 (-> north) in the middle. This is usally more intuitive"
"0","  dplyr::mutate(angle_wmean_Nmid = ifelse(angle_wmean <=180, angle_wmean, angle_wmean-360))"
"0","toc()"
"1","0.25 sec elapsed
"
