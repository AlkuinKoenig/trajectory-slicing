"0","#getting a vector of all trajectories that crossed at least one slice more than once"
"0","IDs_multicross = sliced_df_CHC%>%"
"0","  dplyr::group_by(ID, slice_position)%>%"
"0","  dplyr::summarise(numb = sum(!is.na(angle_wmean)))%>%"
"0","  dplyr::filter(numb > 1)%>%"
"0","  pull(ID)%>% unique()"
"1","[38;5;254m`summarise()` has grouped output by 'ID'. You can override using the `.groups` argument.[39m
"
"0","#what fraction of all trajectories crossed a slice more than once?"
"0","print(paste0(""The fraction of trajectories that crossed at least one slice more than once is: "", "
"0","             signif(length(IDs_multicross)/length(unique(sliced_df_CHC$ID)),3)))"
"1","[1]"
"1"," ""The fraction of trajectories that crossed at least one slice more than once is: 0.269"""
"1","
"
"0","#redoing the plot, but this time excluding ""multicross"" IDs. "
"0","ggplot(myHYS_sample %>% dplyr::filter(!(ID %in% IDs_multicross)), "
"0","       aes(x=lon, y = lat, colour=cluster, group=ID))+"
"0","  geom_polygon(data = world_with_borders, aes(x=long, y=lat, group=group), color='transparent', fill=""gray"", inherit.aes=FALSE)+"
"0","  geom_path(data=radial_slice_df, aes(x=lon, y = lat, group=slice_position), inherit.aes=FALSE, alpha=0.6)+"
"0","  geom_path()+"
"0","  geom_path(data = world_with_borders, aes(x=long, y=lat, group=group), color='black', linewidth=0.7, inherit.aes=FALSE)+"
"0","  coord_cartesian(xlim = myHYS_E4$lon_i[1]+12.5*c(-1,1), ylim =myHYS_E4$lat_i[1]+12.5*c(-1,1))"
