"0","myHYS_E3_filtered_5.ts = myHYS_E3 %>%"
"0","  #we don't want to use a filter here, because, for normalization, we want to retain trajectories that didn't fulfill the conditions"
"0","  #instead, we just flag trajectories accordingly"
"0","  dplyr::mutate(condition_TRUE = ifelse(ID %in% selection_mask5$ID, TRUE, FALSE))%>%"
"0","  dplyr::mutate(month = month(ID))%>%"
"0","  dplyr::group_by(month)%>%"
"0","  dplyr::summarise(condition_TRUE_frac = sum(condition_TRUE)/(sum(condition_TRUE) + sum(!condition_TRUE))) #get the fraction of all trajectories that fulfilled the condition."
"0",""
"0",""
"0","ggplot(myHYS_E3_filtered_5.ts, aes(x=month, y = condition_TRUE_frac))+"
"0","  geom_line()+"
"0","  geom_point()+"
"0","  scale_x_continuous(breaks = 1:12)+"
"0","  theme_bw()+"
"0","  labs(y = ""fraction of trajectories"", x = ""month of the year"", "
"0","       subtitle = ""seasonality of the fraction of trajectories with the air mass origin as defined above"")"
