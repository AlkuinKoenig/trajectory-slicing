"0","angle_range_west =  c(-160, -90) #that's how we defined the south-westerly origin in the long range"
"0","angle_range_east = c(90, 140) # that#s how we define the south-easterly origin in the short range"
"0",""
"0","selection_mask5= sliced_df_2%>%"
"0","  dplyr::filter(case_when("
"0","    #if slice radius <= 5, do filter A"
"0","    slice_position <=5 ~ angle_wmean_Nmid >= angle_range_east[1] & angle_wmean_Nmid <= angle_range_east[2], "
"0","    # if slice radius >= 10, do filter B"
"0","    slice_position >=10 ~ angle_wmean_Nmid >= angle_range_west[1] & angle_wmean_Nmid <= angle_range_west[2], "
"0","    1==1 ~ TRUE #don't do additional filtering if another slice position"
"0","  )"
"0","  )%>%"
"0","  dplyr::group_by(slice_position, ID)%>%"
"0","  dplyr::summarise(crossed = any(crossing_type == ""decreasing""),.groups = ""drop"")%>% #this returns ""1"" if the slice was crossed in ""decreasin"" order at least once. "
"0","  dplyr::group_by(ID)%>%"
"0","  dplyr::summarise(slices_crossed = sum(crossed>0,na.rm=TRUE))%>%"
"0","  dplyr::filter(slices_crossed == length(unique(sliced_df_2$slice_position)))"
"0",""
"0",""
"0","myHYS_E3_filtered_5 = myHYS_E3 %>%"
"0","    dplyr::filter(ID %in% selection_mask5$ID)"
"0",""
"0",""
"0","ggplot(myHYS_E3, aes(x=lon, y = lat, group=ID))+"
"0","  geom_path(color = ""gray50"")+"
"0","  geom_path(data = myHYS_E3_filtered_5, aes(colour=height))+"
"0","  "
"0","  geom_path(data = world, aes(x=long, y=lat, group=group), color='black', size=0.7, inherit.aes=FALSE)+"
"0","  geom_path(data=radial_coords_system_df , aes(x=lon, y = lat, group = slice_position),inherit.aes=FALSE, col = ""blue"")+"
"0","  #the south-westerly filter segments"
"0","  geom_path(data=radial_coords_system_df %>% dplyr::filter(angle_180 >= angle_range_west[1], angle_180 <= angle_range_west[2],"
"0","                                                           slice_position >=10),"
"0","            aes(x=lon, y = lat, group = slice_position),inherit.aes=FALSE, col = ""red"", size=1)+"
"0","  #the south-easterly filter segments"
"0","  geom_path(data=radial_coords_system_df %>% dplyr::filter(angle_180 >= angle_range_east[1], angle_180 <= angle_range_east[2],"
"0","                                                           slice_position <=5),"
"0","            aes(x=lon, y = lat, group = slice_position),inherit.aes=FALSE, col = ""green"", size=1)+"
"0","  annotate(geom=""point"", x = myHYS_E3$lon_i[1], y = myHYS_E3$lat_i[1],colour=""red"")+"
"0","  "
"0","  scale_colour_viridis_c(limits = c(0,6000),oob= scales::squish)+"
"0","  coord_cartesian(ylim = c(-80,-10),xlim = c(-50,65))+ #note that I'm ""zooming in"""
"0","  labs(subtitle=""Filter: Cross green segments in the short range, cross red segments in the mid-to-long range"")"
