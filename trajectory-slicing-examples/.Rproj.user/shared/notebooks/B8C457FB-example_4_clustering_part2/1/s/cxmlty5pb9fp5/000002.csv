"0","angle_shifts = seq(0,359,5)#rotating from 0 to 360 degrees, in steps of a few degrees."
"0",""
"0","k_list = list()"
"0","for (i in 1:length(angle_shifts)){"
"0","  k_list[[i]] = sliced_df_CHC_last_wide %>%"
"0","    dplyr::select(!ID)%>% #we don't want to cluster on the ID column"
"0","    dplyr::rename_at(vars(contains(""angle"")), function(x){paste0(""V"",i,""_"",x)})%>%"
"0","    dplyr::mutate_at(vars(contains(""angle"")), function(x){(x+angle_shifts[i])%%360})%>%"
"0","    dplyr::mutate(across(.cols = contains(""angle""),"
"0","                         .fns = function(x){(x-mean.circular(x))/(sd.circular(x)*360/2/pi)}))%>% #note that sd.circular returns results in radians, but we want degrees"
"0","    dplyr::mutate(across(.cols = contains(""hour_along""),"
"0","                         .fns = function(x){(x-mean(x))/sd(x)}))%>%"
"0","     dplyr::mutate(across(.cols = contains(""height_wmean""),"
"0","                         .fns = function(x){(x-mean(x))/sd(x)}))"
"0","}"
"0","myk_all = do.call(cbind, k_list)%>%"
"0","  as.matrix()"
