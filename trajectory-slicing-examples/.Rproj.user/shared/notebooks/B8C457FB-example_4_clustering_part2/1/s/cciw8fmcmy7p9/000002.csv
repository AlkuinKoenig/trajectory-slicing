"0","set.seed(1000)"
"0","#myHYS_E3 = readRDS(""D:/slices.of.HYSPLIT_V2/slices.of.HYSPLIT/data/DARWIN_back_20d_run1/df/run_combined.rds"")%>%"
"0","  "
"0","#myHYS_E3=readRDS(""D:/slices.of.HYSPLIT_V2/slices.of.HYSPLIT/data/Maido_back_4d/run_combined.rds"")%>%"
"0","#myHYS_E3=readRDS(""D:/slices.of.HYSPLIT_V2/slices.of.HYSPLIT/data/Mace_Head_back4d/run_combined.rds"")%>%"
"0","myHYS_E4=readRDS(paste0(here::here(),""/example_data/Mace_Head_back4d/run_combined.rds""))%>%"
"0","#myHYS_E4=readRDS(""D:/slices.of.HYSPLIT_V2/slices.of.HYSPLIT/data/V1_Cape_Point_5d/df/run_combined.rds"")%>%"
"0","#myHYS_E4=readRDS(""D:/slices.of.HYSPLIT_V2/slices.of.HYSPLIT/data/V1_Chacaltaya_2015-2018/df/run_combined.rds"")%>%"
"0","  dplyr::mutate(get_polar_coords_geographical(lat,lon,lat_i,lon_i),.after=lon)%>%"
"0",""
"0","  #as I'm emitting trajectories from one single point of emission, the time of emission is unique to each trajectory. I'm using it as ID here."
"0","  dplyr::mutate(ID = traj_dt_i)%>%"
"0","#  dplyr::filter(ID %in% sample(unique(.$ID), size = 3000))%>%"
"0","  {.}"
"0",""
"0","#estimating how much difference in latitude, longitude, and radius can be expected in one time step. "
"0","#This is used to defined the ""delta_filter"" later. The goal is to save computational time. "
"0","delta_filter_estimate = myHYS_E4 %>%"
"0","  dplyr::group_by(ID)%>%  "
"0","  dplyr::arrange(hour_along)%>%"
"0","  dplyr::summarise(across(.cols = c(""radius"",""lat"",""lon""), .fns = function(x){abs(x-lag(x,1))}, .names = ""{.col}_delta""))%>%"
"0","  dplyr::ungroup()%>%"
"0","  dplyr::summarise_at(vars(contains(""delta"")), function(x){quantile(x, 0.99,na.rm=TRUE)})"
"1","[38;5;254m`summarise()` has grouped output by 'ID'. You can override using the `.groups` argument.[39m
"
"0","#delta_filter_estimate"
