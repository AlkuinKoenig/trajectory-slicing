"0","myHYS_E4.foot = myHYS_E4 %>%"
"0","  dplyr::filter(!(ID %in% IDs_multicross))%>%"
"0","  dplyr::full_join(., clus_IDs)%>%"
"0","  dplyr::mutate(lat_cut = cut(lat, seq(-90,90,0.5)),"
"0","                lon_cut = cut(lon, seq(-180,180,0.5)))%>%"
"0","  dplyr::group_by(cluster, lat_cut, lon_cut)%>%"
"0","  dplyr::summarise(sum = sum(!is.na(height)),"
"0","                   radmean = mean(radius,na.rm=TRUE))%>%"
"0","  dplyr::mutate(get_interval_bounds(lat_cut, ""lat""),"
"0","                get_interval_bounds(lon_cut, ""lon""))%>%"
"0","  dplyr::group_by(cluster)%>%"
"0","  dplyr::mutate(sum_times_rad = sum*radmean,"
"0","                sum_rad_norm = sum_times_rad/max(sum_times_rad,na.rm=TRUE),"
"0","                sum_norm = sum/max(sum,na.rm=TRUE))"
"1","[38;5;254mJoining with `by = join_by(ID)`[39m
"
"1","[38;5;254m`summarise()` has grouped output by 'cluster', 'lat_cut'. You can override using the `.groups` argument.[39m
"
"0","ggplot(data=myHYS_E4.foot %>% dplyr::filter(!is.na(cluster)), #not showing ""NA"" cluster, which corresponds to trajectories that did not cross any of the slices"
"0","       aes(xmin = lon_inf, xmax=lon_sup, ymin =lat_inf, ymax=lat_sup, fill=sum_rad_norm))+"
"0","  geom_polygon(data = world_with_borders, aes(x=long, y=lat, group=group), color='transparent', fill=""gray"", inherit.aes=FALSE)+"
"0","  facet_wrap(~cluster, labeller = labeller(cluster = function(x){paste0(""cluster "",x)}))+"
"0","  geom_rect()+"
"0","  geom_path(data = world_with_borders, aes(x=long, y=lat, group=group), color='black', linewidth=0.7, inherit.aes=FALSE)+"
"0","  annotate(geom=""point"", x = myHYS_E4$lon_i[1], y = myHYS_E4$lat_i[1], colour=""red"")+"
"0","  scale_fill_viridis_c(trans=""identity"",  oob=squish)+"
"0",""
"0","  geom_path(data=radial_slice_df, aes(x=lon, y = lat, group=slice_position), inherit.aes=FALSE, alpha=0.3, col=""red"")+"
"0","  coord_cartesian(xlim = myHYS_E4$lon_i[1]+12.5*c(-1,1), ylim = myHYS_E4$lat_i[1]+12.5*c(-1,1))+"
"0","  labs(x=""longitude"", y = ""latitude"", fill = ""normalized\ninfluence\nscore"")"
"2","Warning:"
"2"," [38;5;254mRemoved 11 rows containing missing values (`geom_rect()`).[39m
"
